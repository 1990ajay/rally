---
  KeystoneBasic.create_delete_user:
    -
      args:
        name_length: 10
      runner:
        type: "constant"
        times: 10
        concurrency: 10

  KeystoneBasic.create_and_list_tenants:
    -
      args:
        name_length: 10
      runner:
        type: "constant"
        times: 10
        concurrency: 10

  CeilometerAlarms.create_alarm:
    -
      args:
        meter_name: "ram_util"
        threshold: 10.0
        type: "threshold"
        statistic: "avg"
        alarm_actions: ["http://localhost:8776/alarm"]
        ok_actions: ["http://localhost:8776/ok"]
        insufficient_data_actions: ["http://localhost:8776/notok"]
      runner:
        type: "constant"
        times: 10
        concurrency: 10

  CeilometerAlarms.create_and_delete_alarm:
    -
      args:
        meter_name: "ram_util"
        threshold: 10.0
        type: "threshold"
        statistic: "avg"
        alarm_actions: ["http://localhost:8776/alarm"]
        ok_actions: ["http://localhost:8776/ok"]
        insufficient_data_actions: ["http://localhost:8776/notok"]
      runner:
        type: "constant"
        times: 10
        concurrency: 10

  CeilometerAlarms.create_and_list_alarm:
    -
      args:
        meter_name: "ram_util"
        threshold: 10.0
        type: "threshold"
        statistic: "avg"
        alarm_actions: ["http://localhost:8776/alarm"]
        ok_actions: ["http://localhost:8776/ok"]
        insufficient_data_actions: ["http://localhost:8776/notok"]
      runner:
        type: "constant"
        times: 10
        concurrency: 10

  CeilometerAlarms.create_and_update_alarm:
    -
      args:
        meter_name: "ram_util"
        threshold: 10.0
        type: "threshold"
        statistic: "avg"
        alarm_actions: ["http://localhost:8776/alarm"]
        ok_actions: ["http://localhost:8776/ok"]
        insufficient_data_actions: ["http://localhost:8776/notok"]
      runner:
        type: "constant"
        times: 10
        concurrency: 10

  CeilometerAlarms.list_alarms:
    -
      runner:
        type: "constant"
        times: 10
        concurrency: 10

  CeilometerMeters.list_meters:
    -
      runner:
        type: "constant"
        times: 10
        concurrency: 1

  CeilometerResource.list_resources:
    -
      runner:
        type: "constant"
        times: 10
        concurrency: 10

  Dummy.dummy:
    -
      args:
        sleep: 0.25
      runner:
        type: "constant"
        times: 20
        concurrency: 5
      context:
        users:
          tenants: 1
          users_per_tenant: 1
    -
      args:
        sleep: 0.01
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 5
          users_per_tenant: 5
        quotas:
          nova:
            instances: 200
            cores: 200
            ram: -1
            floating_ips: 200
            fixed_ips: 200
            metadata_items: -1
            injected_files: -1
            injected_file_content_bytes: -1
            injected_file_path_bytes: -1
            key_pairs: 500
            security_groups: 400
            security_group_rules: 600
          cinder:
            gigabytes: -1
            snapshots: -1
            volumes: -1

  Dummy.dummy_exception:
    -
      args:
        size_of_message: 5
      runner:
        type: "constant"
        times: 20
        concurrency: 5
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  Dummy.dummy_exception_probability:
    -
      args:
        exception_probability: 0.5
      runner:
        type: "constant"
        times: 100
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  Dummy.dummy_with_scenario_output:
    -
      runner:
        type: "constant"
        times: 20
        concurrency: 10
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  FakePlugin.testplugin:
    -
      runner:
        type: "constant"
        times: 4
        concurrency: 2

  CeilometerStats.create_meter_and_get_stats:
   -
      args:
        user_id: "user-id"
        resource_id: "resource-id"
        counter_volume: 1.0
        counter_unit: ""
        counter_type: "cumulative"
      runner:
        type: "constant"
        times: 200
        concurrency: 5

  CeilometerQueries.create_and_query_alarms:
    -
      args:
        filter: {"and": [{"!=": {"state": "dummy_state"}},{"=": {"type": "threshold"}}]}
        orderby: !!null
        limit: 10
        meter_name: "ram_util"
        threshold: 10.0
        type: "threshold"
        statistic: "avg"
        alarm_actions: ["http://localhost:8776/alarm"]
        ok_actions: ["http://localhost:8776/ok"]
        insufficient_data_actions: ["http://localhost:8776/notok"]
      runner:
        type: "constant"
        times: 10
        concurrency: 10

  CeilometerQueries.create_and_query_alarm_history:
    -
      args:
        orderby: !!null
        limit: !!null
        meter_name: "ram_util"
        threshold: 10.0
        type: "threshold"
        statistic: "avg"
        alarm_actions: ["http://localhost:8776/alarm"]
        ok_actions: ["http://localhost:8776/ok"]
        insufficient_data_actions: ["http://localhost:8776/notok"]
      runner:
        type: "constant"
        times: 10
        concurrency: 10

  CeilometerQueries.create_and_query_samples:
    -
      args:
        filter: {"=": {"counter_unit": "instance"}}
        orderby: !!null
        limit: 10
        counter_name: "cpu_util"
        counter_type: "gauge"
        counter_unit: "instance"
        counter_volume: 1.0
        resource_id: "resource_id"
      runner:
        type: "constant"
        times: 10
        concurrency: 10

  HeatStacks.create_and_list_stack:
    -
      runner:
        type: "constant"
        times: 10
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  HeatStacks.create_and_delete_stack:
    -
      runner:
        type: "constant"
        times: 10
        concurrency: 2
      context:
        users:
          tenants: 2
          users_per_tenant: 3

  Authenticate.validate_cinder:
    -
      args:
        repetitions: 2
      runner:
        type: "constant"
        times: 10
        concurrency: 5
      context:
        users:
          tenants: 3
          users_per_tenant: 5

  Authenticate.validate_glance:
    -
      args:
        repetitions: 2
      runner:
        type: "constant"
        times: 10
        concurrency: 5
      context:
        users:
          tenants: 3
          users_per_tenant: 5

  Authenticate.validate_heat:
    -
      args:
        repetitions: 2
      runner:
        type: "constant"
        times: 10
        concurrency: 5
      context:
        users:
          tenants: 3
          users_per_tenant: 5

  Authenticate.validate_nova:
    -
      args:
        repetitions: 2
      runner:
        type: "constant"
        times: 10
        concurrency: 5
      context:
        users:
          tenants: 3
          users_per_tenant: 5
